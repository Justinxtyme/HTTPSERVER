                                                                                      
;busyness vec subroutines test ;
;if no machines are busy
 ;0 if 1 or more machines busy 
.ORIG x3000

CHECK JSR  NONE 
      JSR  ALL 
      JSR  COUNT 
      JSR  OPEN 
      TRAP x25 
;NONE subroutine returns 1 if 
;none of the machines are busy 
NONE  ST   R7, SAVE7 
      LDI  R1, VEC ;busyness ve  
      LD   R2, MASK1  ; 
      LD   R3, ASCI  
      AND  R0, R0, #0 
      AND  R2, R1, R2 ;check busy 
      BRz  FREE 
BUSY  ADD  R0, R0, R3;conv asci 
      TRAP x21 
      LD   R0, NLINE 
      TRAP x21 
      LD   R7, SAVE7   
      RET 
FREE  ADD  R2, R2, #1 
      ADD  R0, R0, R2;LD to print 
      ADD  R0, R0, R3;conv asci    
      TRAP x21 
      LD   R0, NLINE 
      TRAP x21 
      LD   R7, SAVE7 
      RET

;ALL subroutine returns 1 
;if all machines are busy 
ALL   ST   R7, SAVE7 
      LDI  R1, VEC ;busyness ve 
      LD   R2, FFFF ; 
      LD   R3, ASCI 
      AND  R0, R0, #0 
      AND  R2, R1, R2 ;if AND+1=0 
      ADD  R2, R2, #1 ; then all 
      BRz  BIZ       ;machines busy 
      ADD  R0, R0, R3 
      TRAP x21 
      LD   R0, NLINE 
      TRAP x21 
      LD   R7, SAVE7 
      RET 
BIZ   AND  R2, R2, #0 
      ADD  R2, R2, #1 
      ADD  R0, R0, R2;LD to print 
      ADD  R0, R0, R3;conv asci 
      ST   R7, SAVE7 
      TRAP x21 
      LD   R0, NLINE 
      TRAP x21 
      LD   R7, SAVE7 
      RET

; Count returns the amount of busy machines 
; AND busyness vec with moving bitmask 
COUNT ST   R7, SAVE7 
      LDI  R1, VEC ;busyness vec 
      AND  R3, R3, #0 ; tally for busy 
      AND  R0, R0, #0 ; moving bitmask 
      ADD  R0, R0, #1 ; mving bitmask starts at 1 
      AND  R4, R4, #0 ; 
      AND  R5, R5, #0 ; counter for 
      ADD  R5, R5, #8 ; 8 left bitshifts
LOOP  AND  R4, R1, R0 ; 
      BRz  SKIP 
      ADD  R3, R3, #1 ;increment 
SKIP  ADD  R0, R0, R0 ;shift bitmask 
      ADD  R5, R5, #-1 ;decrement counter 
      BRp  LOOP 
      AND  R0, R0, #0 ;clear R0 
      ADD  R0, R0, R3 
      LD   R3, ASCI 
      ADD  R0, R0, R3 
      TRAP x21 
      LD   R0, NLINE 
      TRAP x21 
      LD   R7, SAVE7 
      RET

OPEN  ST   R7, SAVE7 
      LDI  R1, VEC ;busyness vec 
      AND  R3, R3, #0 ; tally for open machines 
      AND  R0, R0, #0 ; moving bitmask 
      ADD  R0, R0, #1 ; mving bitmask starts at 1 
      AND  R4, R4, #0 ; AND  R5, R5, #0 ; counter for 
      ADD  R5, R5, #8 ; 8 left bitshifts

LOOP0 AND  R4, R1, R0 ; 
      BRp  SKIP0 
      ADD  R3, R3, #1 ;increment 
SKIP0 ADD  R0, R0, R0 ;shift bitmask 
      ADD  R5, R5, #-1 ;decrement counter 
      BRp  LOOP0 
      AND  R0, R0, #0 ;clear R0 
      ADD  R0, R0, R3 
      LD   R3, ASCI 
      ADD  R0, R0, R3 
      TRAP x21 
      LD   R0, NLINE 
      TRAP x21 
      LD   R7, SAVE7 
      RET

VEC   .FILL x4001; address 4 vec 
MASK1 .FILL x00FF; NONE mask 
FFFF  .FILL xFFFF; ALL mask(kinda) 
ASCI  .FILL x0030; asci conversion 
SAVE7 .BLKW #1 ; for saving R7 
NLINE .FILL x000A; ascii 4 newline

      .END